import java.util.Scanner;
import java.util.Arrays;

public class Main {
    public static void main(String[]args){
        Scanner sc =new Scanner (System.in);
        int N = sc.nextInt();
        int []arr, lis ;
        arr = new int [N];
        lis = new int [N];
        sc.nextLine();
        String [] input = sc.nextLine().split(" ");
        for (int i=0; i<input.length; i++){
            arr[i]= Integer.parseInt(input[i]);
        }//input

        int index =1;
        lis[0] = arr[0];
        int tmp = 0;
        for (int i=1; i< N; i++){
            if (lis[index-1]  < arr[i]){
                lis[index++] = arr[i];
            }
            else if (lis[0] > arr[i]) {
                lis[0] = arr[i];
            }
            else {
                tmp = Arrays.binarySearch(lis , 0 , index , arr[i]) ;
                lis[tmp < 0 ? -tmp - 1 : tmp] = arr[i];
            }

        }//for
        int count =0;
        for (int val : lis){
            if (val != 0) {count ++;}
        }
        System.out.println(count);
    }

}//class


/*
예를 들어 왼쪽 그림이 n개의 포트와 다른 n개의 포트를 어떻게 연결해야 하는지를 나타낸다.
하지만 이와 같이 연결을 할 경우에는 연결선이 서로 꼬이기 때문에 이와 같이 연결할 수 없다.
n개의 포트가 다른 n개의 포트와 어떻게 연결되어야 하는지가 주어졌을 때,
연결선이 서로 꼬이지(겹치지, 교차하지) 않도록 하면서 최대 몇 개까지 연결할 수 있는지를 알아내는 프로그램을 작성하시오
첫째 줄에 정수 n(1 ≤ n ≤ 40,000)이 주어진다.
다음 줄에는 차례로 1번 포트와 연결되어야 하는 포트 번호, 2번 포트와 연결되어야 하는 포트 번호, …, n번 포트와 연결되어야 하는 포트 번호가 주어진다.
이 수들은 1 이상 n 이하이며 서로 같은 수는 없다고 가정하자.

출력
첫째 줄에 최대 연결 개수를 출력한다.

예제 입력 1
6
4 2 6 3 1 5

예제 출력 1
3

최장부분증가수열 이름도 괴랄한 LIS
나무위키 LIS와 https://code0xff.tistory.com/70 , https://code0xff.tistory.com/68 를 참고했다.
이해도 하고 외우기도 해야겠다


*/
