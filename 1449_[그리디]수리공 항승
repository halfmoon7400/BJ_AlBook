import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[]args){
        Scanner sc = new Scanner (System.in);
        int N = sc.nextInt();
        int L = sc.nextInt();
        int [] arr = new int [N];
        for (int i=0; i<N; i++){
            arr[i] = sc.nextInt();
        }//input
//        new Sort().sort(arr, 0, arr.length-1);
        Arrays.sort(arr);
        int min = arr[0];
        int count = 1;
        for (int i=0; i< N; i++){
          if (arr[i]-min >L-1){
              min=arr[i];
              count ++;
          }
        }
        System.out.println(count);
    }//main

}//class



/*

항승이는 품질이 심각하게 나쁜 수도 파이프 회사의 수리공이다. 항승이는 세준 지하철 공사에서 물이 샌다는 소식을 듣고 수리를 하러 갔다.
파이프에서 물이 새는 곳은 신기하게도 가장 왼쪽에서 정수만큼 떨어진 거리만 물이 샌다.
항승이는 길이가 L인 테이프를 무한개 가지고 있다.
항승이는 테이프를 이용해서 물을 막으려고 한다. 항승이는 항상 물을 막을 때, 적어도 그 위치의 좌우 0.5만큼 간격을 줘야 물이 다시는 안 샌다고 생각한다.
물이 새는 곳의 위치와, 항승이가 가지고 있는 테이프의 길이 L이 주어졌을 때, 항승이가 필요한 테이프의 최소 개수를 구하는 프로그램을 작성하시오.
테이프를 자를 수 없고, 테이프를 겹쳐서 붙이는 것도 가능하다.

입력
첫째 줄에 물이 새는 곳의 개수 N과 테이프의 길이 L이 주어진다.
둘째 줄에는 물이 새는 곳의 위치가 주어진다. N과 L은 1,000보다 작거나 같은 자연수이고,
물이 새는 곳의 위치는 1,000보다 작거나 같은 자연수이다.

출력
첫째 줄에 항승이가 필요한 테이프의 개수를 출력한다.

예제 입력 1
4 2

1 2 100 101
예제 출력 1
2






처음에는 구멍난 index 의 -0.5 위치일 때 테이프 길이의 반정도 되는 위치를 중간으로 잡고
다음 구멍이 이 위치에서 벗어나면 테이프를 ++ 증가시키고 위치를 갱신하는 방식으로 하려고 했는데
-0.5  -0.5 테이핑의 중간 위치 등 여러 연산과 변수들을 썼었다 


굳이 그럴필요 없이 테이프의 길이 -1 하고
테이핑을 하는 구멍난 위치를 point로 잡고
매 구멍난 위치에서 point로 잡힌 구멍위치와의 거리가 
테이프의 길이 -1 보다 크면 새롭게 point를 갱신하는 방식으로 하면 
이해하기도 쉽고 코드도 간단하고 실수할 우려가 적은 것 같다

참https://peanut2016.tistory.com/12

*/
