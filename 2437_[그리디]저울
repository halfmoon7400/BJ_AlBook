import java.util.Scanner;

public class Main {
    static int [] arr ;
    public static void main(String[]args){
        Scanner sc = new Scanner (System.in);
        int N = sc.nextInt();
        arr = new int [N];
        for (int i=0; i<N; i++){
            arr[i] = sc.nextInt();
        }//input
        new Sort().sort(arr, 0, arr.length-1);
        int min = 1;

        for (int i=0; i< N; i++){
            if (min<arr[i]){
                break;
            }
            min+=arr[i];
        }
        System.out.println(min);
    }//main
}//class

class Sort{
    public void sort(int ar[] , int left , int right ){
        int l = left;
        int r = right;
        int pivot = ar [ (l+r)/2 ];
        do {
            while (ar[l]<pivot) l++;
            while (ar[r]>pivot) r--;
            if (l<=r){
                int tmp = 0;
                tmp = ar[r];
                ar[r] = ar[l];
                ar[l] = tmp;
                l++;
                r--;
            }
        }while (l<=r);
        if (left<r){sort(ar, left, r);}
        if (right>l){sort(ar, l,right);}
    }
}

/*
무게가 양의 정수인 N개의 저울추가 주어질 때, 이 추들을 사용하여 측정할 수 없는 양의 정수 무게 중 최솟값을 구하는 프로그램을 작성하시오.
예를 들어, 무게가 각각 3, 1, 6, 2, 7, 30, 1인 7개의 저울추가 주어졌을 때, 이 추들로 측정할 수 없는 양의 정수 무게 중 최솟값은 21이다.

입력
첫 째 줄에는 저울추의 개수를 나타내는 양의 정수 N이 주어진다. N은 1 이상 1,000 이하이다.
둘째 줄에는 저울추의 무게를 나타내는 N개의 양의 정수가 빈칸을 사이에 두고 주어진다.
각 추의 무게는 1이상 1,000,000 이하이다.
첫째 줄에 주어진 추들로 측정할 수 없는 양의 정수 무게 중 최솟값을 출력한다.

예제 입력 1
7
3 1 6 2 7 30 1

예제 출력 1
21



아직도 많이 부족하다. 처음에 nCr 이항계수로 가능한 경우의 조합을 구해 원소들의 합을 오름차순으로 정렬해 비어있는 최소값을 찾으려고 헀다.
하지만 인터넷에 찾아보니 대단한 형들의 간단한 코드가... https://dundung.tistory.com/79

N자체가 1 <= N <= 1000 이다보니 최소값인 min 은 1부터 시작하며 
오름차순으로 정렬한 입력받은 값들을 index 0부터 비교해가며 min < arr[i] 하면 break 해서 min 값을 출력하는 방식으로 문제가 풀린다.
min 이 저울이 계측 가능한 최소수가 1인 것부터 시작하고, 각 인덱스를 지나갈 때 마다 해당 인덱스의 값을 누적으로 sum 하면 
계측가능한 수이며 for문이 break 되거나 전부 loop 돌게 되었을 때, 계측가능한 최저의 숫자를 의미한다.


* */

